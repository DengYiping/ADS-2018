\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{import} \PYG{n+nn}{scala.annotation.tailrec}

\PYG{k}{object} \PYG{n+nc}{MergeSortVariant} \PYG{o}{\PYGZob{}}
  \PYG{c+cm}{/*}
\PYG{c+cm}{  Generic merge function:}
\PYG{c+cm}{  Input: two already sorted list}
\PYG{c+cm}{  Output: merged and sorted list}
\PYG{c+cm}{   */}
  \PYG{k}{def} \PYG{n}{merge}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{](}\PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{ys}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])(} \PYG{k}{implicit} \PYG{n}{ord}\PYG{k}{:} \PYG{k+kt}{Ordering}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{o}{\PYGZob{}}
    \PYG{c+cm}{/*}
\PYG{c+cm}{    A tail recursive version}
\PYG{c+cm}{     */}
    \PYG{n+nd}{@tailrec}
    \PYG{k}{def} \PYG{n}{helper}\PYG{o}{(}\PYG{n}{`xs`}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{`ys`}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{aggr}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{o}{(}\PYG{n}{`xs`}\PYG{o}{,} \PYG{n}{`ys`}\PYG{o}{)} \PYG{k}{match} \PYG{o}{\PYGZob{}}
      \PYG{k}{case} \PYG{o}{(}\PYG{n+nc}{Nil}\PYG{o}{,} \PYG{n}{l2}\PYG{o}{)} \PYG{k}{=\PYGZgt{}}
        \PYG{n}{aggr}\PYG{o}{.}\PYG{n}{reverse} \PYG{o}{:::} \PYG{n}{l2}
      \PYG{k}{case} \PYG{o}{(}\PYG{n}{l1}\PYG{o}{,} \PYG{n+nc}{Nil}\PYG{o}{)} \PYG{k}{=\PYGZgt{}}
        \PYG{n}{aggr}\PYG{o}{.}\PYG{n}{reverse} \PYG{o}{:::} \PYG{n}{l1}
      \PYG{k}{case} \PYG{o}{(}\PYG{n}{xsHead} \PYG{o}{::} \PYG{n}{xsTail}\PYG{o}{,} \PYG{n}{ysHead} \PYG{o}{::} \PYG{n}{ysTail}\PYG{o}{)} \PYG{k}{=\PYGZgt{}}
        \PYG{k}{if}\PYG{o}{(}\PYG{n}{ord}\PYG{o}{.}\PYG{n}{lt}\PYG{o}{(}\PYG{n}{xsHead}\PYG{o}{,} \PYG{n}{ysHead}\PYG{o}{))}
          \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xsTail}\PYG{o}{,} \PYG{n}{ysHead} \PYG{o}{::} \PYG{n}{ysTail}\PYG{o}{,} \PYG{n}{xsHead} \PYG{o}{::} \PYG{n}{aggr}\PYG{o}{)}
        \PYG{k}{else}
          \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xsHead} \PYG{o}{::} \PYG{n}{xsTail}\PYG{o}{,} \PYG{n}{ysTail}\PYG{o}{,} \PYG{n}{ysHead} \PYG{o}{::} \PYG{n}{aggr}\PYG{o}{)}
    \PYG{o}{\PYGZcb{}}
    \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xs}\PYG{o}{,} \PYG{n}{ys}\PYG{o}{,} \PYG{n+nc}{Nil}\PYG{o}{)}
  \PYG{o}{\PYGZcb{}}

  \PYG{k}{def} \PYG{n}{mergeSortVariant}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{](}\PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{insertion\PYGZus{}depth}\PYG{k}{:} \PYG{k+kt}{Int}\PYG{o}{)(} \PYG{k}{implicit} \PYG{n}{ord}\PYG{k}{:} \PYG{k+kt}{Ordering}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{o}{\PYGZob{}}
    \PYG{k}{val} \PYG{n}{len} \PYG{k}{=} \PYG{n}{xs}\PYG{o}{.}\PYG{n}{length}
    \PYG{k}{if}\PYG{o}{(}\PYG{n}{len} \PYG{o}{\PYGZlt{}=} \PYG{n}{insertion\PYGZus{}depth}\PYG{o}{)}
      \PYG{n}{insertionSort}\PYG{o}{(}\PYG{n}{xs}\PYG{o}{)}
    \PYG{k}{else} \PYG{o}{\PYGZob{}}
      \PYG{k}{val} \PYG{o}{(}\PYG{n}{split1}\PYG{o}{,} \PYG{n}{split2}\PYG{o}{)} \PYG{k}{=} \PYG{n}{xs}\PYG{o}{.}\PYG{n}{splitAt}\PYG{o}{(}\PYG{n}{len} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{o}{)}
      \PYG{n}{merge}\PYG{o}{(}\PYG{n}{mergeSortVariant}\PYG{o}{(}\PYG{n}{split1}\PYG{o}{,} \PYG{n}{insertion\PYGZus{}depth}\PYG{o}{),} \PYG{n}{mergeSortVariant}\PYG{o}{(}\PYG{n}{split2}\PYG{o}{,} \PYG{n}{insertion\PYGZus{}depth}\PYG{o}{))}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/*}
\PYG{c+cm}{  Insert a element into a sorted list}
\PYG{c+cm}{   */}
  \PYG{k}{def} \PYG{n}{insert}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{](}\PYG{n}{x}\PYG{k}{:} \PYG{k+kt}{T}\PYG{o}{,} \PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])(}\PYG{k}{implicit} \PYG{n}{ord}\PYG{k}{:} \PYG{k+kt}{Ordering}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{o}{\PYGZob{}}
    \PYG{c+cm}{/*}
\PYG{c+cm}{    Make it tail recursive so that it does not overflow the stack}
\PYG{c+cm}{     */}
    \PYG{n+nd}{@tailrec}
    \PYG{k}{def} \PYG{n}{helper}\PYG{o}{(}\PYG{n}{x}\PYG{k}{:} \PYG{k+kt}{T}\PYG{o}{,} \PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{aggr}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{n}{xs} \PYG{k}{match} \PYG{o}{\PYGZob{}}
      \PYG{k}{case} \PYG{n+nc}{Nil} \PYG{k}{=\PYGZgt{}}
        \PYG{o}{(}\PYG{n}{x} \PYG{o}{::} \PYG{n}{aggr}\PYG{o}{).}\PYG{n}{reverse}
      \PYG{k}{case} \PYG{n}{y} \PYG{o}{::} \PYG{n}{ys} \PYG{k}{if} \PYG{n}{ord}\PYG{o}{.}\PYG{n}{lt}\PYG{o}{(}\PYG{n}{x}\PYG{o}{,} \PYG{n}{y}\PYG{o}{)} \PYG{k}{=\PYGZgt{}}
        \PYG{n}{aggr}\PYG{o}{.}\PYG{n}{reverse} \PYG{o}{:::} \PYG{o}{(}\PYG{n}{x} \PYG{o}{::} \PYG{n}{y} \PYG{o}{::} \PYG{n}{ys}\PYG{o}{)}
      \PYG{k}{case} \PYG{n}{y} \PYG{o}{::} \PYG{n}{ys} \PYG{k}{=\PYGZgt{}}
        \PYG{n}{helper}\PYG{o}{(}\PYG{n}{x}\PYG{o}{,} \PYG{n}{ys}\PYG{o}{,} \PYG{n}{y} \PYG{o}{::} \PYG{n}{aggr}\PYG{o}{)}
    \PYG{o}{\PYGZcb{}}
    \PYG{n}{helper}\PYG{o}{(}\PYG{n}{x}\PYG{o}{,} \PYG{n}{xs}\PYG{o}{,} \PYG{n+nc}{Nil}\PYG{o}{)}
  \PYG{o}{\PYGZcb{}}
  \PYG{c+cm}{/*}
\PYG{c+cm}{  Implementation of insertion sort}
\PYG{c+cm}{   */}
  \PYG{k}{def} \PYG{n}{insertionSort}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{](}\PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])(}\PYG{k}{implicit} \PYG{n}{ord}\PYG{k}{:} \PYG{k+kt}{Ordering}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{o}{\PYGZob{}}
    \PYG{c+cm}{/*}
\PYG{c+cm}{    Make it tail recursive so that compiler to optimize}
\PYG{c+cm}{     */}
    \PYG{n+nd}{@tailrec}
    \PYG{k}{def} \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xs}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{],} \PYG{n}{aggr}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{])}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{T}\PYG{o}{]} \PYG{k}{=} \PYG{n}{xs} \PYG{k}{match} \PYG{o}{\PYGZob{}}
      \PYG{k}{case} \PYG{n+nc}{Nil} \PYG{k}{=\PYGZgt{}} \PYG{n}{aggr}
      \PYG{k}{case} \PYG{n}{xsHead} \PYG{o}{::} \PYG{n}{xsTail} \PYG{k}{=\PYGZgt{}} \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xsTail}\PYG{o}{,} \PYG{n}{insert}\PYG{o}{(}\PYG{n}{xsHead}\PYG{o}{,} \PYG{n}{aggr}\PYG{o}{))}
    \PYG{o}{\PYGZcb{}}
    \PYG{n}{helper}\PYG{o}{(}\PYG{n}{xs}\PYG{o}{,} \PYG{n+nc}{Nil}\PYG{o}{)}
  \PYG{o}{\PYGZcb{}}
  \PYG{k}{def} \PYG{n}{generateRandom}\PYG{o}{(}\PYG{n}{n}\PYG{k}{:} \PYG{k+kt}{Int}\PYG{o}{)}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{Int}\PYG{o}{]} \PYG{k}{=} \PYG{o}{\PYGZob{}}
    \PYG{k}{val} \PYG{n}{r} \PYG{k}{=} \PYG{k}{new} \PYG{n}{scala}\PYG{o}{.}\PYG{n}{util}\PYG{o}{.}\PYG{n+nc}{Random}
    \PYG{l+m+mi}{1} \PYG{n}{to} \PYG{n}{n} \PYG{n}{map} \PYG{o}{\PYGZob{}} \PYG{k}{\PYGZus{}} \PYG{k}{=\PYGZgt{}} \PYG{n}{r}\PYG{o}{.}\PYG{n}{nextInt}\PYG{o}{()} \PYG{o}{\PYGZcb{}} \PYG{n}{toList}
  \PYG{o}{\PYGZcb{}}
  \PYG{k}{def} \PYG{n}{generateWorst}\PYG{o}{(}\PYG{n}{n}\PYG{k}{:} \PYG{k+kt}{Int}\PYG{o}{)} \PYG{k}{=} \PYG{n}{generateRandom}\PYG{o}{(}\PYG{n}{n}\PYG{o}{).}\PYG{n}{sorted}
  \PYG{k}{def} \PYG{n}{generateBest}\PYG{o}{(}\PYG{n}{n}\PYG{k}{:} \PYG{k+kt}{Int}\PYG{o}{)} \PYG{k}{=} \PYG{n}{generateWorst}\PYG{o}{(}\PYG{n}{n}\PYG{o}{).}\PYG{n}{reverse}

  \PYG{k}{def} \PYG{n}{generateData}\PYG{o}{(}\PYG{n}{n}\PYG{k}{:}\PYG{k+kt}{Int}\PYG{o}{,} \PYG{n}{timer}\PYG{k}{:} \PYG{k+kt}{Int} \PYG{o}{=\PYGZgt{}} \PYG{n+nc}{Long}\PYG{o}{)}\PYG{k}{:} \PYG{k+kt}{String} \PYG{o}{=} \PYG{o}{\PYGZob{}}
    \PYG{k}{val} \PYG{n}{innerdata} \PYG{k}{=} \PYG{o}{(}\PYG{l+m+mi}{1} \PYG{n}{to} \PYG{n}{n}\PYG{o}{)} \PYG{n}{map} \PYG{o}{\PYGZob{}}\PYG{k}{\PYGZus{}} \PYG{o}{*} \PYG{l+m+mi}{10000}\PYG{o}{\PYGZcb{}} \PYG{n}{map} \PYG{o}{\PYGZob{}} \PYG{n}{i} \PYG{k}{=\PYGZgt{}} \PYG{o}{(}\PYG{n}{i}\PYG{o}{,} \PYG{o}{(}\PYG{n}{timer}\PYG{o}{(}\PYG{n}{i}\PYG{o}{)} \PYG{o}{+} \PYG{n}{timer}\PYG{o}{(}\PYG{n}{i}\PYG{o}{)} \PYG{o}{+} \PYG{n}{timer}\PYG{o}{(}\PYG{n}{i}\PYG{o}{)} \PYG{o}{)} \PYG{o}{/} \PYG{l+m+mi}{3}\PYG{o}{)\PYGZcb{}} \PYG{n}{mkString} \PYG{l+s}{\PYGZdq{}, \PYGZdq{}}
    \PYG{l+s}{s\PYGZdq{}[}\PYG{l+s+si}{\PYGZdl{}innerdata}\PYG{l+s}{]\PYGZdq{}}
  \PYG{o}{\PYGZcb{}}
  \PYG{k}{def} \PYG{n}{kToTime}\PYG{o}{(}\PYG{n}{k}\PYG{k}{:} \PYG{k+kt}{Int}\PYG{o}{,} \PYG{n}{data}\PYG{k}{:} \PYG{k+kt}{List}\PYG{o}{[}\PYG{k+kt}{Int}\PYG{o}{])}\PYG{k}{:}\PYG{k+kt}{Long} \PYG{o}{=} \PYG{o}{\PYGZob{}}
    \PYG{n+nc}{Timer}\PYG{o}{.}\PYG{n}{justTime}\PYG{o}{(}\PYG{n}{mergeSortVariant}\PYG{o}{(}\PYG{n}{data}\PYG{o}{,} \PYG{n}{k}\PYG{o}{))}
  \PYG{o}{\PYGZcb{}}

  \PYG{k}{def} \PYG{n}{main}\PYG{o}{(}\PYG{n}{args}\PYG{k}{:} \PYG{k+kt}{Array}\PYG{o}{[}\PYG{k+kt}{String}\PYG{o}{])}\PYG{k}{:}\PYG{k+kt}{Unit} \PYG{o}{=} \PYG{o}{\PYGZob{}}
    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZsh{} Generate Plot data\PYGZdq{}}\PYG{o}{)}

    \PYG{k}{val} \PYG{n}{kVal} \PYG{k}{=} \PYG{l+m+mi}{20}
    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZsh{} Best case\PYGZdq{}}\PYG{o}{)}
    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}bestPlot = \PYGZdq{}} \PYG{o}{+} \PYG{n}{generateData}\PYG{o}{(}\PYG{l+m+mi}{20}\PYG{o}{,} \PYG{o}{\PYGZob{}}\PYG{n}{i}\PYG{k}{:}\PYG{k+kt}{Int} \PYG{o}{=\PYGZgt{}} \PYG{n}{kToTime}\PYG{o}{(}\PYG{n}{kVal}\PYG{o}{,} \PYG{n}{generateBest}\PYG{o}{(}\PYG{n}{i}\PYG{o}{))\PYGZcb{}))}

    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZsh{} Worst case\PYGZdq{}}\PYG{o}{)}
    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}worstPlot = \PYGZdq{}} \PYG{o}{+} \PYG{n}{generateData}\PYG{o}{(}\PYG{l+m+mi}{20}\PYG{o}{,} \PYG{o}{\PYGZob{}}\PYG{n}{i}\PYG{k}{:}\PYG{k+kt}{Int} \PYG{o}{=\PYGZgt{}} \PYG{n}{kToTime}\PYG{o}{(}\PYG{n}{kVal}\PYG{o}{,} \PYG{n}{generateWorst}\PYG{o}{(}\PYG{n}{i}\PYG{o}{))\PYGZcb{}))}

    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}\PYGZsh{} Average case\PYGZdq{}}\PYG{o}{)}
    \PYG{n}{println}\PYG{o}{(}\PYG{l+s}{\PYGZdq{}avgPlot = \PYGZdq{}} \PYG{o}{+} \PYG{n}{generateData}\PYG{o}{(}\PYG{l+m+mi}{20}\PYG{o}{,} \PYG{o}{\PYGZob{}}\PYG{n}{i}\PYG{k}{:}\PYG{k+kt}{Int} \PYG{o}{=\PYGZgt{}} \PYG{n}{kToTime}\PYG{o}{(}\PYG{n}{kVal}\PYG{o}{,} \PYG{n}{generateRandom}\PYG{o}{(}\PYG{n}{i}\PYG{o}{))\PYGZcb{}))}
  \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
